name: Terraform
on:
  workflow_call:
    inputs:
      environment_name:
        required: true
        type: string
    secrets:    
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_SUBSCRIPTION_ID: 
        required: true
      ARM_TENANT_ID: 
        required: true
      ARM_ACCESS_KEY:
        required: true

        
jobs:
  terraform-plan:
    name: 'Plan'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}    
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: latest

      - name: Terraform Init
        run: terraform init -backend-config="key=${{ inputs.environment_name }}.terraform.tfstate"
          
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file="${{ inputs.environment_name }}.tfvars" -out="${{ inputs.environment_name }}.tfplan"

      - name: Archive Terraform Plan
        uses: actions/upload-artifact@v4.3.1
        with:
          name: terraform-plan
          path: ${{ inputs.environment_name }}.tfplan


  terrafrom-apply:
    name: 'Apply'
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/feature/')
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment_name }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: latest

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4.1.2
        with:
          name: terraform-plan
          path: ${{ github.workspace }}     

      - name: Terraform Init
        run: terraform init -backend-config="key=${{ inputs.environment_name }}.terraform.tfstate"

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve "${{ inputs.environment_name }}.tfplan"



