name: Docker Image Build

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      docker-context:
        required: true
        type: string
      dockerfile-path:
        required: false
        default: './Dockerfile'
        type: string
      release:
        description: 'Skip workflow if set to true for releases'
        required: false
        type: boolean
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  docker-build:
    if: ${{ inputs.release == false }} 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: Download version file
        uses: actions/download-artifact@v4.1.4
        with:
          name: version
          path: /tmp
          
      - name: Set Docker Tag
        run: |
          VERSION=$(cat /tmp/version.txt)
          echo "DOCKER_TAG=$VERSION" >> $GITHUB_ENV
          
          # Assuming you can modify the workflow_call to include a 'github_ref' input or similar
          if [[ "${{ inputs.github_ref }}" == refs/tags/* ]]; then
            # If the input suggests this was triggered by a tag, use the tag name directly
            TAG_NAME=${{ inputs.github_ref }}#refs/tags/
            echo "DOCKER_TAG=$TAG_NAME" >> $GITHUB_ENV
          else
            # Otherwise, use the version as is
            echo "DOCKER_TAG=$VERSION" >> $GITHUB_ENV
          fi    

      - name: Download Artifacts
        uses: actions/download-artifact@v4.1.4
        with:
          name: published-app
          path: ./publish
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: ${{ inputs.docker-context }}
          file: ${{ inputs.dockerfile-path }}
          push: true
          tags: ${{ inputs.image-name }}:${{ env.DOCKER_TAG }}
