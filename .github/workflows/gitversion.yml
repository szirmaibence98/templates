name: GitVersion

on:
  workflow_call:
    outputs:
      version:
        description: "The calculated version"
        value: ${{ jobs.gitversion.outputs.version }}

jobs:
  gitversion:
    name: 'Determine Version'
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.determine_version.outputs.SemVer }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          preferLatestVersion: true

    
      - name: Display GitVersion variables (with prefix)
        run: |
          echo "Major: ${{ env.GitVersion_Major }}"
          echo "Minor: ${{ env.GitVersion_Minor }}"
          echo "Patch: ${{ env.GitVersion_Patch }}"
          echo "PreReleaseTag: ${{ env.GitVersion_PreReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ env.GitVersion_PreReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ env.GitVersion_PreReleaseLabel }}"
          echo "PreReleaseNumber: ${{ env.GitVersion_PreReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ env.GitVersion_WeightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ env.GitVersion_BuildMetaData }}"
          echo "BuildMetaDataPadded: ${{ env.GitVersion_BuildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ env.GitVersion_FullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ env.GitVersion_MajorMinorPatch }}"
          echo "SemVer: ${{ env.GitVersion_SemVer }}"
          echo "LegacySemVer: ${{ env.GitVersion_LegacySemVer }}"
          echo "LegacySemVerPadded: ${{ env.GitVersion_LegacySemVerPadded }}"
          echo "AssemblySemVer: ${{ env.GitVersion_AssemblySemVer }}"
          echo "AssemblySemFileVer: ${{ env.GitVersion_AssemblySemFileVer }}"
          echo "FullSemVer: ${{ env.GitVersion_FullSemVer }}"
          echo "InformationalVersion: ${{ env.GitVersion_InformationalVersion }}"
          echo "BranchName: ${{ env.GitVersion_BranchName }}"
          echo "EscapedBranchName: ${{ env.GitVersion_EscapedBranchName }}"
          echo "Sha: ${{ env.GitVersion_Sha }}"
          echo "ShortSha: ${{ env.GitVersion_ShortSha }}"
          echo "NuGetVersionV2: ${{ env.GitVersion_NuGetVersionV2 }}"
          echo "NuGetVersion: ${{ env.GitVersion_NuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ env.GitVersion_NuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ env.GitVersion_NuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ env.GitVersion_VersionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ env.GitVersion_CommitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ env.GitVersion_CommitsSinceVersionSourcePadded }}"
          echo "UncommittedChanges: ${{ env.GitVersion_UncommittedChanges }}"
          echo "CommitDate: ${{ env.GitVersion_CommitDate }}"

      - name: Determine Version
        id: determine_version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          
  display-semver:
    name: Display Semantic Version
    runs-on: ubuntu-latest
    needs: gitversion
    env:
      SEMVER: ${{ needs.gitversion.outputs.version }}
    steps:
      - name: Display version
        run: |
          echo SemVer: $SEMVER
